import { z } from "zod";
export declare const PricingInfoSchema: z.ZodObject<{
    pricePerUse: z.ZodNumber;
    currency: z.ZodString;
}, "strip", z.ZodTypeAny, {
    pricePerUse?: number;
    currency?: string;
}, {
    pricePerUse?: number;
    currency?: string;
}>;
export declare const MetadataSchema: z.ZodObject<{
    title: z.ZodString;
    description: z.ZodString;
    version: z.ZodString;
    logo: z.ZodOptional<z.ZodString>;
    author: z.ZodString;
    tags: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    version?: string;
    title?: string;
    description?: string;
    logo?: string;
    author?: string;
    tags?: string[];
}, {
    version?: string;
    title?: string;
    description?: string;
    logo?: string;
    author?: string;
    tags?: string[];
}>;
export declare const ServiceConfigSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    metadata: z.ZodObject<{
        capabilities: z.ZodArray<z.ZodString, "many">;
        languages: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        capabilities?: string[];
        languages?: string[];
    }, {
        capabilities?: string[];
        languages?: string[];
    }>;
    recommendedPrompt: z.ZodString;
    recommendedTools: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    id?: string;
    description?: string;
    name?: string;
    metadata?: {
        capabilities?: string[];
        languages?: string[];
    };
    recommendedPrompt?: string;
    recommendedTools?: string[];
}, {
    id?: string;
    description?: string;
    name?: string;
    metadata?: {
        capabilities?: string[];
        languages?: string[];
    };
    recommendedPrompt?: string;
    recommendedTools?: string[];
}>;
export declare const ToolboxConfigSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    tools: z.ZodArray<z.ZodString, "many">;
    metadata: z.ZodObject<{
        complexity: z.ZodString;
        applicableFields: z.ZodArray<z.ZodString, "many">;
    }, "strip", z.ZodTypeAny, {
        complexity?: string;
        applicableFields?: string[];
    }, {
        complexity?: string;
        applicableFields?: string[];
    }>;
    recommendedPrompt: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id?: string;
    description?: string;
    name?: string;
    metadata?: {
        complexity?: string;
        applicableFields?: string[];
    };
    recommendedPrompt?: string;
    tools?: string[];
}, {
    id?: string;
    description?: string;
    name?: string;
    metadata?: {
        complexity?: string;
        applicableFields?: string[];
    };
    recommendedPrompt?: string;
    tools?: string[];
}>;
export declare const ToolConfigSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    pricing: z.ZodObject<{
        pricePerUse: z.ZodNumber;
        currency: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        pricePerUse?: number;
        currency?: string;
    }, {
        pricePerUse?: number;
        currency?: string;
    }>;
    inputSchema: z.ZodAny;
    outputSchema: z.ZodAny;
}, "strip", z.ZodTypeAny, {
    id?: string;
    description?: string;
    name?: string;
    pricing?: {
        pricePerUse?: number;
        currency?: string;
    };
    inputSchema?: any;
    outputSchema?: any;
}, {
    id?: string;
    description?: string;
    name?: string;
    pricing?: {
        pricePerUse?: number;
        currency?: string;
    };
    inputSchema?: any;
    outputSchema?: any;
}>;
export declare const ServiceContextSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id?: string;
    description?: string;
    name?: string;
}, {
    id?: string;
    description?: string;
    name?: string;
}>;
export declare const ServiceContextWithDataSchema: z.ZodObject<z.objectUtil.extendShape<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
}, {
    data: z.ZodAny;
}>, "strip", z.ZodTypeAny, {
    data?: any;
    id?: string;
    description?: string;
    name?: string;
}, {
    data?: any;
    id?: string;
    description?: string;
    name?: string;
}>;
export declare const ToolWithJsonSchemaSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    inputSchema: z.ZodAny;
}, "strip", z.ZodTypeAny, {
    id?: string;
    description?: string;
    name?: string;
    inputSchema?: any;
}, {
    id?: string;
    description?: string;
    name?: string;
    inputSchema?: any;
}>;
export declare const GetAllToolsAsJsonSchemaResponseSchema: z.ZodObject<{
    tools: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        name: z.ZodString;
        description: z.ZodString;
        inputSchema: z.ZodAny;
    }, "strip", z.ZodTypeAny, {
        id?: string;
        description?: string;
        name?: string;
        inputSchema?: any;
    }, {
        id?: string;
        description?: string;
        name?: string;
        inputSchema?: any;
    }>, "many">;
    reccomendedPrompts: z.ZodArray<z.ZodString, "many">;
}, "strip", z.ZodTypeAny, {
    tools?: {
        id?: string;
        description?: string;
        name?: string;
        inputSchema?: any;
    }[];
    reccomendedPrompts?: string[];
}, {
    tools?: {
        id?: string;
        description?: string;
        name?: string;
        inputSchema?: any;
    }[];
    reccomendedPrompts?: string[];
}>;
export declare const ServicePinnableSchema: z.ZodObject<{
    id: z.ZodString;
    type: z.ZodEnum<["button", "widget"]>;
    label: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    icon: z.ZodString;
}, "strip", z.ZodTypeAny, {
    type?: "button" | "widget";
    id?: string;
    description?: string;
    name?: string;
    label?: string;
    icon?: string;
}, {
    type?: "button" | "widget";
    id?: string;
    description?: string;
    name?: string;
    label?: string;
    icon?: string;
}>;
export declare const ServicePinnableWithWidgetSchema: z.ZodObject<z.objectUtil.extendShape<{
    id: z.ZodString;
    type: z.ZodEnum<["button", "widget"]>;
    label: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    icon: z.ZodString;
}, {
    widget: z.ZodObject<{
        text: z.ZodOptional<z.ZodString>;
        data: z.ZodOptional<z.ZodAny>;
        ui: z.ZodOptional<z.ZodAny>;
    }, "strip", z.ZodTypeAny, {
        text?: string;
        data?: any;
        ui?: any;
    }, {
        text?: string;
        data?: any;
        ui?: any;
    }>;
}>, "strip", z.ZodTypeAny, {
    type?: "button" | "widget";
    id?: string;
    description?: string;
    name?: string;
    widget?: {
        text?: string;
        data?: any;
        ui?: any;
    };
    label?: string;
    icon?: string;
}, {
    type?: "button" | "widget";
    id?: string;
    description?: string;
    name?: string;
    widget?: {
        text?: string;
        data?: any;
        ui?: any;
    };
    label?: string;
    icon?: string;
}>;
export type PricingInfo = z.infer<typeof PricingInfoSchema>;
export type ServiceMetadata = z.infer<typeof MetadataSchema>;
export type ServiceConfig = z.infer<typeof ServiceConfigSchema>;
export type ToolboxConfig = z.infer<typeof ToolboxConfigSchema>;
export type ToolConfig = z.infer<typeof ToolConfigSchema>;
export type ServiceContext = z.infer<typeof ServiceContextSchema>;
export type ServiceContextWithData = z.infer<typeof ServiceContextWithDataSchema>;
export type ToolWithJsonSchema = z.infer<typeof ToolWithJsonSchemaSchema>;
export type ServicePinnable = z.infer<typeof ServicePinnableSchema>;
export type ServicePinnableWithWidget = z.infer<typeof ServicePinnableWithWidgetSchema>;
