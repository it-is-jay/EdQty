#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var commander_1 = require("commander");
var init_1 = __importDefault(require("./commands/init"));
var dev_1 = __importDefault(require("./commands/dev"));
var deploy_1 = __importDefault(require("./commands/deploy"));
var build_1 = __importDefault(require("./commands/build"));
var start_1 = __importDefault(require("./commands/start"));
var testchat_1 = __importDefault(require("./commands/testchat"));
var program = new commander_1.Command();
program
    .name('dain')
    .description('CLI for Dain Protocol')
    .version(require('../package.json').version);
program
    .command('init <projectName>')
    .description('Initialize a new Dain project')
    .action(function (projectName) {
    if (!projectName) {
        console.error('Error: Project name is required');
        process.exit(1);
    }
    (0, init_1.default)(projectName);
});
program
    .command('dev')
    .description('Run the project in development mode')
    .option('--port <port>', 'Set the port number', '2022')
    .option('--noproxy', 'Disable localtunnel proxy')
    .option('-c, --config <path>', 'Path to custom configuration file')
    .option('--runtime <runtime>', 'Specify the runtime (node or workers)')
    .action(function (options) {
    (0, dev_1.default)(options);
});
program
    .command('deploy')
    .description('Deploy the project')
    .option('-c, --config <path>', 'Path to custom configuration file')
    .action(function (options) {
    (0, deploy_1.default)(options);
});
program
    .command('build')
    .description('Build the project')
    .option('-c, --config <path>', 'Path to custom configuration file')
    .option('--runtime <runtime>', 'Specify the runtime (node or workers)', 'node')
    .action(function (options) {
    (0, build_1.default)(options);
});
program
    .command('start')
    .description('Start the project')
    .option('--port <port>', 'Set the port number', '2022')
    .action(function (options) {
    (0, start_1.default)(options);
});
program
    .command('testchat')
    .description('Start a chat session with a DAIN service')
    .option('--url <url>', 'The URL of the DAIN service')
    .action(function (options) {
    (0, testchat_1.default)(options);
});
program.parse(process.argv);
// Add a catch-all command for unknown commands
program.on('command:*', function () {
    console.error('Invalid command: %s\nSee --help for a list of available commands.', program.args.join(' '));
    process.exit(1);
});
// Handle case when no command is provided
if (!process.argv.slice(2).length) {
    program.outputHelp();
    process.exit(1);
}
